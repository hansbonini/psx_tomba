# golangci-lint configuration file
# See https://golangci-lint.run/usage/configuration/

run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  modules-download-mode: readonly

output:
  formats:
    - format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters:
  enable:
    - errcheck      # Checking for unchecked errors
    - gosimple      # Linter for Go source code that specializes in simplifying code
    - govet         # Vet examines Go source code and reports suspicious constructs
    - ineffassign   # Detects when assignments to existing variables are not used
    - staticcheck   # It's a set of rules from staticcheck
    - typecheck     # Like the front-end of a Go compiler, parses and type-checks Go code
    - unused        # Checks Go code for unused constants, variables, functions and types
    - gofmt         # Gofmt checks whether code was gofmt-ed
    - goimports     # Check imports
    - misspell      # Finds commonly misspelled English words in comments
    - goconst       # Finds repeated strings that could be replaced by a constant
    - gocyclo       # Computes and checks the cyclomatic complexity of functions
    - gosec         # Inspects source code for security problems
    - prealloc      # Finds slice declarations that could potentially be pre-allocated
    - unconvert     # Remove unnecessary type conversions
    - dupl          # Tool for code clone detection
    - gocritic      # Provides diagnostics that check for bugs, performance and style issues

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: true

  govet:
    enable-all: true
    disable:
      - shadow      # We'll handle shadow separately if needed
      - fieldalignment  # Disable struct field alignment for now

  gocyclo:
    min-complexity: 15

  goconst:
    min-len: 3
    min-occurrences: 3

  misspell:
    locale: US
    ignore-words:
      - dialogues
      - dialogue
      - Dialogues
      - Dialogue

  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - commentedOutCode
      - hugeParam

  gosec:
    excludes:
      - G101 # Look for hard coded credentials (may have false positives)
      - G204 # Subprocess launched with variable (needed for our use case)

issues:
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - gosec
        - dupl
        - goconst

    # Exclude known false positives
    - text: "weak cryptographic primitive"
      linters:
        - gosec

    # Exclude shadow warnings for common variable names
    - text: "shadow: declaration of \"err\""
      linters:
        - govet

    # Exclude some staticcheck checks
    - linters:
        - staticcheck
      text: "SA1019:" # Ignore deprecation warnings for now

  max-issues-per-linter: 0
  max-same-issues: 0
